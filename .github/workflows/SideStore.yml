name: Fix JSON and Release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"

permissions:
  contents: write

jobs:
  fix-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Download original JSON
        run: curl -s https://aio.zxcvbn.fyi/r/repo.altstore.json -o repo.altstore.json

      - name: Fix JSON (remove duplicates safely)
        run: |
          python << 'EOF'
          import json
          from datetime import datetime

          with open("repo.altstore.json", "r", encoding="utf-8") as f:
              data = json.load(f)

          fixed_apps = []
          seen = set()

          for app in data.get("apps", []):
              bid = app.get("bundleIdentifier")
              ver = app.get("version")

              # if both bundleIdentifier and version exist, deduplicate
              if bid and ver:
                  key = (bid, ver)
                  if key in seen:
                      continue
                  seen.add(key)

              # always keep the app, even if malformed
              fixed_apps.append(app)

          # sort apps (those with valid versionDate first)
          def sort_key(app):
              d = app.get("versionDate")
              v = app.get("version", "")
              try:
                  d = datetime.fromisoformat(d) if d else datetime.min
              except Exception:
                  d = datetime.min
              return (app.get("bundleIdentifier", ""), d, v)

          fixed_apps.sort(key=sort_key)

          data["apps"] = fixed_apps

          with open("repo.fixed.json", "w", encoding="utf-8") as f:
              json.dump(data, f, indent=2, ensure_ascii=False)
          EOF

      - name: Commit fixed JSON to repository
        run: |
          cp repo.fixed.json repo.altstore.json
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add repo.altstore.json
          git commit -m "chore: update fixed repo.altstore.json" || echo "No changes to commit"
          git push

      - name: Upload fixed JSON to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "latest-fixed"
          name: "Latest Fixed JSON"
          body: "Cleaned and valid repo JSON for SideStore."
          files: repo.fixed.json
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
